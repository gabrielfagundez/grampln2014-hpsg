;;; Expresiones ;;;
;;;;;;;;;;;;;;;;;;;

expresion := *top* &
[ HEAD pos,
  SPR *list*,
  COMPS *list* ].

frase := expresion &
[ ARGS *list* ].

pos := *top*.

adv := pos.

prep := pos.

conj := pos.

vb := agr-pos &
[ AGR agr-cat-p ].

det := agr-pos-pg.

sust := agr-pos-pg.

adj := agr-pos &
[ AGR agr-cat-g ].

;;; Concordancia ;;;
;;;;;;;;;;;;;;;;;;;;

num-cat := *top*.
per-cat := *top*.
gen-cat := *top*.

agr-pos := pos &
[ AGR agr-cat ].

agr-pos-pg := agr-pos &
[ AGR agr-cat-pg ].

agr-cat := *top* &
[ NUM num-cat ].

agr-cat-p := agr-cat &
[ PER per-cat ].

agr-cat-g := agr-cat &
[ GEN gen-cat ].

agr-cat-pg := agr-cat-p & agr-cat-g.

;;; Lexemas ;;;
;;;;;;;;;;;;;;;

palabra := expresion &
[ ORTH string ].

sustantivo := palabra &
[ HEAD sust,
  SPR < frase & [ HEAD det ] >,
  COMPS < > ].

verbo := palabra &
[ HEAD vb,
  SPR < frase & [ HEAD sust ] > ].

verbo-intrans := verbo &
[ COMPS < > ].

frase-nominal := frase &
[ HEAD sust,
  SPR < > ].

frase-prep := frase &
[ HEAD prep,
  SPR < > ].

verbo-trans-n := verbo &
[ COMPS < frase-nominal > ].

verbo-trans-p := verbo &
[ COMPS < frase-prep > ].

verbo-ditrans-np := verbo &
[ COMPS < frase-nominal,
          frase-prep > ].

verbo-ditrans-pp := verbo &
[ COMPS < frase-nominal,
          frase-nominal > ].

determinante := palabra &
[ HEAD det,
  SPR < >,
  COMPS < > ].

adverbio := palabra &
[ HEAD adv,
  SPR < > ].

preposicion := palabra &
[ HEAD prep,
  SPR < >,
  COMPS < frase-nominal > ].

adjetivo := palabra &
[ HEAD adj,
  SPR < > ].

conjuncion := palabra &
[ HEAD conj,
  SPR < > ].

;;; Tipos basicos ;;;
;;;;;;;;;;;;;;;;;;;;;

string := *top*.

*list* := *top*.

*ne-list* := *list* &
[ FIRST *top*,
  REST *list* ].

*null* := *list*.
